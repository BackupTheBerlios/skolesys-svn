#!/usr/bin/python

import os.path
import os
import sys
from optparse import OptionParser

usage = "Usage: build_skolesys --svnbase=file:///var/lib/svn module"
parser = OptionParser(usage=usage)

if __name__=='__main__':
	
	parser.add_option("-b", "--svnbase", dest="svnbase",default=None,
		help="The base folder containing skolesys svn repositories", metavar="SKOLESYS_SVNBASE")
	
	(options, args) = parser.parse_args()
	
	if not options.svnbase:
		options.svnbase = raw_input("Input the base folder containing the SkoleSYS svn repositories: ")	
	if len(args)==0:
		module = raw_input("Which module is to be build: ")	
	else:
		module = args[0]
		
	if os.path.exists('rep'):
		os.system('sudo rm rep -R -f')
	os.mkdir('rep')
	
	if os.path.exists('debian'):
		os.system('sudo rm debian -R -f')
	os.makedirs('debian/DEBIAN')
	
	os.system('svn co %s rep' % os.path.join(options.svnbase,module))
	
	if not os.path.exists('%s_debinfo.py' % module):
		print "ERROR: %s_debfile.py is missing" % module
		sys.exit(0)
	
	debinfo = __import__('%s_debinfo' % module)
	
	# Check validity
	if not dir(debinfo).count('control'):
		print "ERROR: %s_debfile.py requires the control member to be assigned" % module

	# Permishions
	if dir(debinfo).count('perm'):
		for src in debinfo.perm.keys():
			os.system('chmod %s rep/%s' % (debinfo.perm[src],src))
			print "setting file permissions on %s to %s" % (debinfo.perm[src],src)
	
	# File copy
	if dir(debinfo).count('copy'):
		for src in debinfo.copy.keys():
			if not os.path.exists('debian/%s' % debinfo.copy[src]):
				os.makedirs(os.path.normpath('debian/%s' % debinfo.copy[src]))
			os.system('cp rep/%s debian/%s -R -f' % (src,debinfo.copy[src]))
			print "copying files %s -> %s " % (src,debinfo.copy[src])
			
		os.system('find debian | grep "\\.svn" | xargs rm -R -f')
	
	
	# Make symbolic links
	if dir(debinfo).count('links'):
		for src in debinfo.links.keys():
			parts = os.path.split(os.path.normpath('debian/%s' % src))
			directory = os.path.join(parts[:-1])[0]
			linkname = parts[-1:][0]
			if not os.path.exists(directory):
				os.makedirs(directory)
			
			os.system('ln -s %s %s' % (os.path.normpath(debinfo.links[src]),os.path.join(directory,linkname)))
			print "creating symbolic link %s -> %s" % (os.path.join(directory,linkname),os.path.normpath(debinfo.links[src]))


	# Copy controlfiles
	f = open('debian/DEBIAN/control','w')
	f.write(debinfo.control)
	f.close()
	
	if dir(debinfo).count('postinst'):
		f = open('debian/DEBIAN/postinst','w')
		f.write(debinfo.control)
		f.close()
	
	if dir(debinfo).count('prerm'):
		f = open('debian/DEBIAN/prerm','w')
		f.write(debinfo.control)
		f.close()

